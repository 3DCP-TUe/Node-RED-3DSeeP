[
    {
        "id": "eb70c43778e8f00c",
        "type": "tab",
        "label": "Filebrowser",
        "disabled": false,
        "info": ""
    },
    {
        "id": "76e63bc5e47ea1b0",
        "type": "comment",
        "z": "eb70c43778e8f00c",
        "name": "File Browser",
        "info": "1) Update the default folder in the Init node\n2) Update the default folder in the Reset node as well\n3) You can duplicate the Reset nodes and use them as saved shortcuts\n4) Check the Convert Timestamps function node if you want to see your dates in a different format. I just used the Javascript toISOString format.\n5) The Graph button can read any CSV file which have any number of values, but the first column always contains a timestamp column with javascript timestamp of the data point.",
        "x": 290,
        "y": 200,
        "wires": []
    },
    {
        "id": "f272a53c4288ce28",
        "type": "inject",
        "z": "eb70c43778e8f00c",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "change",
        "payload": "D:\\Node Red\\Files",
        "payloadType": "str",
        "x": 290,
        "y": 260,
        "wires": [
            [
                "9ee2212a5f6f671f"
            ]
        ]
    },
    {
        "id": "0eb35b3aa7c87452",
        "type": "ui_button",
        "z": "eb70c43778e8f00c",
        "name": "",
        "group": "f4f266b4.cb455",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "topicType": "str",
        "x": 280,
        "y": 300,
        "wires": [
            [
                "9ee2212a5f6f671f"
            ]
        ]
    },
    {
        "id": "443f884ba94da87d",
        "type": "ui_dropdown",
        "z": "eb70c43778e8f00c",
        "name": "File Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a file",
        "group": "f4f266b4.cb455",
        "order": 9,
        "width": "5",
        "height": "1",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 1090,
        "y": 300,
        "wires": [
            [
                "c1246c38bd035d8d"
            ]
        ]
    },
    {
        "id": "46c306c72e40a789",
        "type": "function",
        "z": "eb70c43778e8f00c",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a file\n    obj = {};\n    obj [msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 300,
        "wires": [
            [
                "443f884ba94da87d"
            ]
        ]
    },
    {
        "id": "9c7b56ce60832b3b",
        "type": "ui_template",
        "z": "eb70c43778e8f00c",
        "group": "f4f266b4.cb455",
        "name": "",
        "order": 6,
        "width": "18",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\" height=\"400\" style=\"height: 400px;\"><br/>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1280,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "6c938e6f8a8e36df",
        "type": "template",
        "z": "eb70c43778e8f00c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table width=\"100%\">\n    <tr><th>File Name</th><th>Size</th><th>Created</th><th>Changed</th></tr>\n    {{#payload}}\n        <tr>\n            <td><a href=\"/download?filename={{name}}\" target=\"blank\">{{fname}}</a></td>\n            <td>{{stat.size}}</td>\n            <td>{{stat.created}}</td>\n            <td>{{stat.changed}}</td>\n        </tr>\n    {{/payload}}\n</table>\n",
        "output": "str",
        "x": 1120,
        "y": 360,
        "wires": [
            [
                "9c7b56ce60832b3b"
            ]
        ]
    },
    {
        "id": "b6cba765456ef985",
        "type": "function",
        "z": "eb70c43778e8f00c",
        "name": "Convert timestamps",
        "func": "for (var i=0; i<msg.payload.length; i++) {\n    msg.payload[i].stat.created = msg.payload[i].stat.created.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.changed = msg.payload[i].stat.changed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.accessed = msg.payload[i].stat.accessed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.statusChanged = msg.payload[i].stat.statusChanged.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 360,
        "wires": [
            [
                "6c938e6f8a8e36df"
            ]
        ]
    },
    {
        "id": "fe0c88651aa35d7c",
        "type": "ui_button",
        "z": "eb70c43778e8f00c",
        "name": "",
        "group": "f4f266b4.cb455",
        "order": 10,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 310,
        "y": 460,
        "wires": [
            [
                "1611054c6523bf1f"
            ]
        ]
    },
    {
        "id": "2cf1707de458c51e",
        "type": "function",
        "z": "eb70c43778e8f00c",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\nif (msg.filename.replace(/^.*(\\\\|\\/|\\:)/, '')[0]!==\".\") {\n    // Only do this if this is a file, we don't delete folders\n    // and delete the context/selection as we are deleting the file as well\n    flow.set(\"fileselected\");\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 520,
        "wires": [
            [
                "222522da59a83a8c"
            ]
        ]
    },
    {
        "id": "222522da59a83a8c",
        "type": "file",
        "z": "eb70c43778e8f00c",
        "name": "Delete file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 720,
        "y": 520,
        "wires": [
            [
                "1c80e8ec744d9dfe",
                "c871eab730b30099"
            ]
        ]
    },
    {
        "id": "a45a0cba39d92aef",
        "type": "http in",
        "z": "eb70c43778e8f00c",
        "name": "",
        "url": "/download",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 660,
        "wires": [
            [
                "1cac646a516e2d68"
            ]
        ]
    },
    {
        "id": "74e17d9c2d3f9721",
        "type": "http response",
        "z": "eb70c43778e8f00c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1110,
        "y": 660,
        "wires": []
    },
    {
        "id": "1cac646a516e2d68",
        "type": "function",
        "z": "eb70c43778e8f00c",
        "name": "Get the file name",
        "func": "msg.filename = msg.req.query.filename;\nmsg.contentdisposition = \"attachment; filename=\\\"\" + msg.req.query.filename.replace(/^.*(\\\\|\\/|\\:)/, '') + \"\\\"\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 660,
        "wires": [
            [
                "e1d009bb0c05211f"
            ]
        ],
        "outputLabels": [
            "Folder selected",
            "File selected"
        ]
    },
    {
        "id": "e1d009bb0c05211f",
        "type": "file in",
        "z": "eb70c43778e8f00c",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 760,
        "y": 660,
        "wires": [
            [
                "9d198569c41bc2a4"
            ]
        ]
    },
    {
        "id": "9d198569c41bc2a4",
        "type": "change",
        "z": "eb70c43778e8f00c",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/csv",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Content-Disposition",
                "pt": "msg",
                "to": "contentdisposition",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 660,
        "wires": [
            [
                "74e17d9c2d3f9721"
            ]
        ]
    },
    {
        "id": "4a328aa1487e7023",
        "type": "ui_button",
        "z": "eb70c43778e8f00c",
        "name": "",
        "group": "f4f266b4.cb455",
        "order": 11,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Graph",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "show_chart",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 270,
        "y": 780,
        "wires": [
            [
                "7c8d7716a4c3829e"
            ]
        ]
    },
    {
        "id": "7c8d7716a4c3829e",
        "type": "function",
        "z": "eb70c43778e8f00c",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\nif (msg.filename.replace(/^.*(\\\\|\\/|\\:)/, '')[0]!==\".\") {\n    // Only do this if this is a file, we don't delete folders\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 780,
        "wires": [
            [
                "af77931092a65f4d"
            ]
        ]
    },
    {
        "id": "af77931092a65f4d",
        "type": "file in",
        "z": "eb70c43778e8f00c",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 620,
        "y": 780,
        "wires": [
            [
                "be1038bb50aedf3e"
            ]
        ]
    },
    {
        "id": "be1038bb50aedf3e",
        "type": "csv",
        "z": "eb70c43778e8f00c",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "x": 770,
        "y": 780,
        "wires": [
            [
                "4bced5e8bed01af2"
            ]
        ]
    },
    {
        "id": "1784dd0f6141afb5",
        "type": "debug",
        "z": "eb70c43778e8f00c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 740,
        "wires": []
    },
    {
        "id": "4bced5e8bed01af2",
        "type": "function",
        "z": "eb70c43778e8f00c",
        "name": "Format data for chart",
        "func": "var chart = [{\n    \"series\":[],\n    \"data\":[],\n    \"labels\":[msg.filename]\n}];\n\n\n/*\nvar pressure = [];\nvar out2 = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n    pressure.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].pressure});\n    out2.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].out2*200});\n\n}\nchart[0].data.push(pressure);\nchart[0].data.push(out2);\n*/\n\nlet columns = 0;\n\nfor(var series in msg.payload[0]) {\n    if(series!==\"timestamp\") {\n        chart[0].series.push(series);\n        chart[0].data.push([]);\n        columns++;\n    }\n}\n\n\nfor (var j=0; j<msg.payload.length; j++) {\n   for(var i=0;i<columns;i++) {\n       chart[0].data[i].push({\"x\":msg.payload[j].timestamp, \"y\":msg.payload[j][chart[0].series[i]]});\n   } \n}\n\n\n\n\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 780,
        "wires": [
            [
                "2352a6c6aac3b27b",
                "1784dd0f6141afb5"
            ]
        ]
    },
    {
        "id": "2352a6c6aac3b27b",
        "type": "ui_chart",
        "z": "eb70c43778e8f00c",
        "name": "",
        "group": "f4f266b4.cb455",
        "order": 12,
        "width": "18",
        "height": "6",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1180,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "1d7a12d0aa5726fd",
        "type": "ui_toast",
        "z": "eb70c43778e8f00c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "No",
        "raw": false,
        "topic": "",
        "name": "Confirmation",
        "x": 690,
        "y": 460,
        "wires": [
            [
                "cefb1b7951eb91ea"
            ]
        ]
    },
    {
        "id": "1611054c6523bf1f",
        "type": "change",
        "z": "eb70c43778e8f00c",
        "name": "Set message",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Delete confirmation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Are you sure you want to delete this file?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 460,
        "wires": [
            [
                "1d7a12d0aa5726fd"
            ]
        ]
    },
    {
        "id": "cefb1b7951eb91ea",
        "type": "switch",
        "z": "eb70c43778e8f00c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Yes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 460,
        "wires": [
            [
                "2cf1707de458c51e"
            ]
        ]
    },
    {
        "id": "9ee2212a5f6f671f",
        "type": "function",
        "z": "eb70c43778e8f00c",
        "name": "Folder handling",
        "func": "let folder = context.get(\"folder\");\nif (folder===undefined) {\n    folder=\"/\";\n    context.set(\"folder\", folder);\n}\n\nlet hidden = context.get(\"hidden\");\nif (hidden===undefined) {\n    hidden=false;\n    context.set(\"hidden\", hidden);\n}\n\nif (msg.topic===\"up\") {\n    var the_arr = folder.split('/');\n    the_arr.pop();\n    folder=the_arr.join('/'); \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"change\") {\n    folder=msg.payload;    \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"hidden\") {\n    hidden=msg.payload;    \n    context.set(\"hidden\", hidden);\n}\n\nmsg.payload = {\"start\":folder, \"hidden\": hidden};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 360,
        "wires": [
            [
                "1c80e8ec744d9dfe",
                "0526ef11cc58dbac",
                "c871eab730b30099"
            ]
        ]
    },
    {
        "id": "0526ef11cc58dbac",
        "type": "ui_text",
        "z": "eb70c43778e8f00c",
        "group": "f4f266b4.cb455",
        "order": 4,
        "width": "9",
        "height": "1",
        "name": "",
        "label": "Folder:",
        "format": "{{msg.payload.start}}",
        "layout": "row-left",
        "x": 680,
        "y": 240,
        "wires": []
    },
    {
        "id": "4a44eb2ba2283f60",
        "type": "ui_button",
        "z": "eb70c43778e8f00c",
        "name": "",
        "group": "f4f266b4.cb455",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "arrow_upwards",
        "payload": "",
        "payloadType": "str",
        "topic": "up",
        "topicType": "str",
        "x": 290,
        "y": 380,
        "wires": [
            [
                "9ee2212a5f6f671f"
            ]
        ]
    },
    {
        "id": "e0f8ec7e37e58f04",
        "type": "ui_button",
        "z": "eb70c43778e8f00c",
        "name": "",
        "group": "f4f266b4.cb455",
        "order": 8,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Open",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "folder_open",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 310,
        "y": 580,
        "wires": [
            [
                "bed6b23db816f1dd"
            ]
        ]
    },
    {
        "id": "bed6b23db816f1dd",
        "type": "function",
        "z": "eb70c43778e8f00c",
        "name": "Change folder",
        "func": "// Get the filename from the flow context\nlet folderselected = flow.get(\"folderselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (folderselected===undefined) {\n    return;\n}\n\nmsg.topic = \"change\";\nmsg.payload = folderselected;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 580,
        "wires": [
            [
                "9ee2212a5f6f671f"
            ]
        ]
    },
    {
        "id": "6e23752b3461a25b",
        "type": "ui_button",
        "z": "eb70c43778e8f00c",
        "name": "",
        "group": "f4f266b4.cb455",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "autorenew",
        "payload": "/home",
        "payloadType": "str",
        "topic": "change",
        "topicType": "str",
        "x": 290,
        "y": 340,
        "wires": [
            [
                "9ee2212a5f6f671f"
            ]
        ]
    },
    {
        "id": "2a86bed87b53c4f2",
        "type": "ui_dropdown",
        "z": "eb70c43778e8f00c",
        "name": "Folder Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a folder",
        "group": "f4f266b4.cb455",
        "order": 7,
        "width": "5",
        "height": "1",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 1100,
        "y": 400,
        "wires": [
            [
                "6ab94e0b153d52ce"
            ]
        ]
    },
    {
        "id": "1ae8481b1ac1e318",
        "type": "function",
        "z": "eb70c43778e8f00c",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a foler\n    obj = {};\n    obj [\"[\"+msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')+\"]\"]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 400,
        "wires": [
            [
                "2a86bed87b53c4f2"
            ]
        ]
    },
    {
        "id": "c1246c38bd035d8d",
        "type": "change",
        "z": "eb70c43778e8f00c",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "fileselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "6ab94e0b153d52ce",
        "type": "change",
        "z": "eb70c43778e8f00c",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "folderselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "26739a6c7efa53c3",
        "type": "ui_switch",
        "z": "eb70c43778e8f00c",
        "name": "",
        "label": "Hidden",
        "tooltip": "Show hidden files or not",
        "group": "f4f266b4.cb455",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "false",
        "topic": "hidden",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "check_box",
        "oncolor": "#000000",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "check_box_outline_blank",
        "offcolor": "#000000",
        "animate": true,
        "className": "",
        "x": 280,
        "y": 420,
        "wires": [
            [
                "9ee2212a5f6f671f"
            ]
        ]
    },
    {
        "id": "1c80e8ec744d9dfe",
        "type": "fs-file-lister",
        "z": "eb70c43778e8f00c",
        "name": "Files",
        "start": "../",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 690,
        "y": 300,
        "wires": [
            [
                "46c306c72e40a789",
                "b6cba765456ef985"
            ]
        ]
    },
    {
        "id": "c871eab730b30099",
        "type": "fs-file-lister",
        "z": "eb70c43778e8f00c",
        "name": "Folders",
        "start": "../",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 700,
        "y": 400,
        "wires": [
            [
                "1ae8481b1ac1e318"
            ]
        ]
    },
    {
        "id": "f4f266b4.cb455",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "f10c466.c448038",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "f10c466.c448038",
        "type": "ui_tab",
        "name": "Files",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]